# -*- coding: utf-8 -*-
"""
Created on Wed Dec 21 17:21:07 2022

@author: n.maltsev

Модуль содержит валидаторы для проверки введенных пользователем контактных
данных с помощью команды main.py -a. Функции валидации реализованы на
регулярных выражениях.
Подробнее о каждом валидаторе в docstring к соотв. функциям.
"""


import re


def contact_name_is_cyrrilic(text: str) -> bool:
    
    ''' Функция-валидатор проверки введенного ФИО.
    re.match ищет по заданному шаблону в начале строки. Шаблон - символы
    кириллицы, дефисы и пробелы
    Используя преобразование типа, возвращает True, если в веденной контактной
    информации присутствует заданный шаблон, иначе возвращает False'''
    
    return bool(re.match('[(а-яА-Я) + \s + \-]', text))
    #return bool(re.fullmatch('?:[А-Я](?:\.|[а-я]+)', text))

def contact_email_is_valid(email: str) -> bool:
    
    ''' Функция-валидатор проверки введенного адреса эл. почты
    re.fullmatch определяет соответствие строки указаному шаблону.
    Шаблон - типичное регулярное выражение проверки корректности эл. почты.
    Пример: .
    Используя преобразование типа, возвращает True, если в веденной контактной
    информации адреса эл. почты присутствует заданный шаблон,
    иначе возвращает False'''
    
    return bool(re.fullmatch(
        '([A-Za-z0-9]+[.-_])*[A-Za-z0-9]+@[A-Za-z0-9-]+(\.[A-Z|a-z]{2,})+',email))

def contact_phone_is_valid(phone: str) -> bool:
    
    ''' Функция-валидатор проверки введенного номера телефона
    re.fullmatch определяет соответствие строки указаному шаблону.
    Шаблон - типичное регулярное выражение проверки корректности номера
    телефона. Пример: .
    Используя преобразование типа, возвращает True, если в веденной контактной
    информации номера телефона присутствует заданный шаблон,
    иначе возвращает False
    Для упрощения паттерн номера заменен на более простой -
    просто цифру "8". Следует раскоментировать код реального валидатора'''
    
    #return bool(re.fullmatch("8(?:-\\d{3}){2}(?:-\\d{2}){2}", phone))
    return bool(re.fullmatch("8", phone))